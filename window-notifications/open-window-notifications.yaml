blueprint:
  name: Open Window Notifications
  description: >-
    This Automation Blueprint gets activated, once one of the selected windows are opened.
    The Automation then compares the inside and outside temperature and calculate the time,
    when a notifications should be sent, based on the provided boundaries.
    
    
    ‚ñ∂Ô∏è Please set up one Automation per room/area and select an appropriate temperature entity‚ùï <br>
    This also enables you, to use specific time and temperature values for each room (e.g. child rooms, etc.).
    

    **Like My Work?** <br>
    [![ko-fi](https://ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/I3I4160K4Y)
  domain: automation
  author: Flo-R1der (https://github.com/Flo-R1der)

  input:

    window_sensors:
      name: Window sensors
      description: >-
        Select the window sensors to be monitored. <br>
        **NOTE**: only `binary_sensor` supported.
      selector:
        entity:
          filter:
            domain: binary_sensor
            device_class: window
          multiple: true

    inside_temp_entity:
      name: Indoor temperature sensor
      description: Sensor that provides the current indoor temperature.
      selector:
        entity:
          filter:
            domain: sensor
            device_class: temperature

    outside_temp_entity:
      name: Outdoor temperature sensor
      description: Sensor that provides the current outdoor temperature.
      selector:
        entity:
          filter:
            domain: sensor
            device_class: temperature

    min_temp_diff:
      name: Minimum temperature difference (¬∞C)
      description: The dynamic calculation of the waiting time starts from this difference.
      selector:
        number:
          min: 1
          max: 10
          step: 0.5
          unit_of_measurement: ¬∞C
          mode: slider
      default: 5

    max_temp_diff:
      name: Maximum temperature difference (¬∞C)
      description: Upper limit value for temperature difference.
      selector:
        number:
          min: 10
          max: 30
          step: 0.5
          unit_of_measurement: ¬∞C
          mode: slider
      default: 20

    min_warning_min:
      name: Minimum waiting time (minutes)
      description: Shortest time before a warning is triggered (for large temperature differences).
      selector:
        number:
          min: 1
          max: 10
          step: 1
          unit_of_measurement: min
          mode: slider
      default: 5

    max_warning_min:
      name: Maximum waiting time (minutes)
      description: Longest time before a warning is triggered (with a small temperature difference).
      selector:
        number:
          min: 10
          max: 60
          step: 1
          unit_of_measurement: min
          mode: slider
      default: 30

    notify_action:
      name: Notification action
      description: Action that is triggered if a window is open for too long.
      selector:
        action: {}
      default:
        - service: notify.notify
          data:
            title: It's getting cold ü•∂
            message: >-
              Window in {{area}} open for over {{time}} minutes
              and it's only {{outside_temp}}¬∞C outside!
            data:
              tag: "{{ area }}"

    retention_action:
      name: RETENTION action
      description: Action to clear the previous notification, once the window is closed.
      selector:
        action: {}
      default:
        - service: notify.notify
          data:
            message: clear_notification
            data:
              tag: "{{ area_name(trigger.entity_id) }}"


variables:
  window_sensors: !input window_sensors
  inside_temp_entity: !input inside_temp_entity
  outside_temp_entity: !input outside_temp_entity
  min_temp_diff: !input min_temp_diff
  max_warning_min: !input max_warning_min
  min_warning_min: !input min_warning_min
  max_temp_diff: !input max_temp_diff


triggers:
  - trigger: state
    entity_id: !input window_sensors
    to: "on"
    id: OPEN
  - trigger: state
    entity_id: !input window_sensors
    to: "off"
    id: CLOSE


action:
  - choose:
      - conditions:
          - condition: trigger
            id:
              - OPEN
        sequence:
          - variables:
              inside_temp: "{{ states(inside_temp_entity) }}"
              outside_temp: "{{ states(outside_temp_entity) }}"
              inout_temp_diff: "{{ inside_temp - outside_temp }}"
            alias: Temperature Calculation
          - variables:
              above_temp_threshold: "{{ inout_temp_diff >= min_temp_diff }}"
              above_max_temp_diff: "{{ inout_temp_diff >= max_temp_diff }}"
              calculated_minutes: |-
                {{ max_warning_min - 
                  ( ( inout_temp_diff - min_temp_diff )
                  * ( max_warning_min - min_warning_min )
                  / ( max_temp_diff - min_temp_diff ) ) }}
              delay_minutes: |-
                {% if above_max_temp_diff %}
                  {{ min_warning_min }}
                {% elif above_temp_threshold %}
                  {{ calculated_minutes | round(2) }}
                {% endif %}
              area: "{{ area_name(trigger.entity_id) }}"
              time: "{{ delay_minutes | round(0, 'floor') }}"
            alias: Threshold, Time and Notification-Variables
          - if:
              - condition: template
                value_template: "{{ above_temp_threshold }}"
            then:
              - delay:
                  minutes: "{{ delay_minutes }}"
              - alias: Window still opened?
                if:
                  - condition: template
                    value_template: "{{ is_state(trigger.entity_id, 'on') }}"
                then: !input notify_action
                else:
                  - stop: Window closed
      - conditions:
          - condition: trigger
            id:
              - CLOSE
        sequence: !input retention_action


mode: parallel
max: 10
